Q：According to the given paper, what are the differences in sentiment expression in software engineering texts? Please answer within 50 words.

A:The paper found that off-the-shelf sentiment analysis tools trained on non-technical domains tend to misclassify neutral technical sentences in software engineering texts as emotionally negative. The proposed tool Senti4SD addresses this issue by exploiting lexicon, keyword, and semantic features to better capture sentiment in developers' communications. Overall, Senti4SD reduces misclassifications of neutral and positive posts as negative in software engineering texts.

Q：According to the given paper, how to handle such software engineering texts when analyzing sentiment ? Please answer within 100 words.

A:The paper proposes a customized sentiment analysis tool called Senti4SD to better handle sentiment analysis in software engineering texts. Here are the key ways Senti4SD handles software engineering peculiarities:

It uses lexicon features based on a sentiment dictionary, but tuned for technical language to reduce negative bias.
It extracts keyword features like technical terms, emoticons, uppercase intensifiers to capture sentiment-bearing elements.
It builds a distributional semantic model on 20 million StackOverflow posts to compute semantic similarity features that capture contextual meaning.
It trains a classifier on 4423 StackOverflow posts manually annotated for sentiment polarity to learn software engineering nuances.
Overall, by combining custom lexicon, keyword and semantic features and training on domain texts, Senti4SD reduces the misclassification of neutral technical texts as negative sentiment, a key issue with off-the-shelf tools. The approach generalizes across different feature settings and smaller training sets.